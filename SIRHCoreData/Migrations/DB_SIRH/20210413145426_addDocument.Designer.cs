// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIRHCoreData.Models.DB;

namespace SIRHCoreData.Migrations.DB_SIRH
{
    [DbContext(typeof(DB_SIRHContext))]
    [Migration("20210413145426_addDocument")]
    partial class addDocument
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDimDepartement", b =>
                {
                    b.Property<int>("IdDepartement")
                        .HasColumnType("int")
                        .HasColumnName("ID_DEPARTEMENT");

                    b.Property<int>("IdDirection")
                        .HasColumnType("int")
                        .HasColumnName("ID_DIRECTION");

                    b.Property<string>("LibelleDepartement")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LIBELLE_DEPARTEMENT");

                    b.HasKey("IdDepartement");

                    b.HasIndex("IdDepartement")
                        .IsUnique();

                    b.HasIndex("IdDirection");

                    b.ToTable("TBL_DIM_DEPARTEMENT");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDimDirection", b =>
                {
                    b.Property<int>("IdDirection")
                        .HasColumnType("int")
                        .HasColumnName("ID_DIRECTION");

                    b.Property<string>("LibelleDirection")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LIBELLE_DIRECTION");

                    b.HasKey("IdDirection")
                        .HasName("PK_DIRECTION");

                    b.HasIndex("IdDirection")
                        .IsUnique();

                    b.ToTable("TBL_DIM_DIRECTION");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDimFonction", b =>
                {
                    b.Property<int>("IdFonction")
                        .HasColumnType("int")
                        .HasColumnName("ID_FONCTION");

                    b.Property<int>("IdDirection")
                        .HasColumnType("int")
                        .HasColumnName("ID_DIRECTION");

                    b.Property<string>("LibelleFonction")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LIBELLE_FONCTION");

                    b.HasKey("IdFonction")
                        .HasName("PK_FONCTION");

                    b.HasIndex("IdDirection");

                    b.HasIndex("IdFonction")
                        .IsUnique();

                    b.ToTable("TBL_DIM_FONCTION");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDimPays", b =>
                {
                    b.Property<int>("IdPays")
                        .HasColumnType("int")
                        .HasColumnName("ID_PAYS");

                    b.Property<string>("NomPays")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NOM_PAYS");

                    b.HasKey("IdPays")
                        .HasName("PK__TBL_DIM___B68ABC4D6B18DA05");

                    b.ToTable("TBL_DIM_PAYS");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDimSituationFamiliale", b =>
                {
                    b.Property<int>("IdSituationFamiliale")
                        .HasColumnType("int")
                        .HasColumnName("ID_SITUATION_FAMILIALE");

                    b.Property<string>("LibelleSituationFamiliale")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("LIBELLE_SITUATION_FAMILIALE");

                    b.HasKey("IdSituationFamiliale")
                        .HasName("PK__TBL_DIM___88406D8F40C882DD");

                    b.ToTable("TBL_DIM_SITUATION_FAMILIALE");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDimStructure", b =>
                {
                    b.Property<int>("IdStructure")
                        .HasColumnType("int")
                        .HasColumnName("ID_STRUCTURE");

                    b.Property<string>("LibelleStructure")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LIBELLE_STRUCTURE");

                    b.HasKey("IdStructure")
                        .HasName("PK_STRUCTURE");

                    b.HasIndex("IdStructure")
                        .IsUnique();

                    b.ToTable("TBL_DIM_STRUCTURE");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDimVille", b =>
                {
                    b.Property<int>("IdVille")
                        .HasColumnType("int")
                        .HasColumnName("ID_VILLE");

                    b.Property<int>("IdPays")
                        .HasColumnType("int")
                        .HasColumnName("ID_PAYS");

                    b.Property<string>("NomVille")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NOM_VILLE");

                    b.HasKey("IdVille")
                        .HasName("PK__TBL_DIM___1FFE7135E409D1CC");

                    b.HasIndex("IdPays");

                    b.ToTable("TBL_DIM_VILLE");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDwEtatCivil", b =>
                {
                    b.Property<int>("Matricule")
                        .HasColumnType("int")
                        .HasColumnName("MATRICULE");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ADRESSE");

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("date")
                        .HasColumnName("DATE_NAISSANCE");

                    b.Property<string>("EmailPersonnel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMAIL_PERSONNEL");

                    b.Property<int>("IdPaysNaissance")
                        .HasColumnType("int")
                        .HasColumnName("ID_PAYS_NAISSANCE");

                    b.Property<int>("IdSituationFamiliale")
                        .HasColumnType("int")
                        .HasColumnName("ID_SITUATION_FAMILIALE");

                    b.Property<int>("IdVilleNaissance")
                        .HasColumnType("int")
                        .HasColumnName("ID_VILLE_NAISSANCE");

                    b.Property<string>("Linkedin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LINKEDIN");

                    b.Property<string>("Nationalite")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NATIONALITE");

                    b.Property<string>("NumSecuSociale")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NUM_SECU_SOCIALE");

                    b.HasKey("Matricule");

                    b.HasIndex("IdSituationFamiliale");

                    b.HasIndex("IdVilleNaissance");

                    b.HasIndex("Matricule")
                        .IsUnique();

                    b.ToTable("TBL_DW_ETAT_CIVIL");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDwSalarie", b =>
                {
                    b.Property<int>("Matricule")
                        .HasColumnType("int")
                        .HasColumnName("MATRICULE");

                    b.Property<string>("Civilite")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("CIVILITE");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<int>("IdFonction")
                        .HasColumnType("int")
                        .HasColumnName("ID_FONCTION");

                    b.Property<int>("IdStructure")
                        .HasColumnType("int")
                        .HasColumnName("ID_STRUCTURE");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NOM");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PRENOM");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TEL");

                    b.HasKey("Matricule")
                        .HasName("PK_MATRICULE");

                    b.HasIndex("IdFonction");

                    b.HasIndex("IdStructure");

                    b.HasIndex("Matricule")
                        .IsUnique();

                    b.ToTable("TBL_DW_SALARIE");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDimDepartement", b =>
                {
                    b.HasOne("SIRHCoreData.Models.DB.TblDimDirection", "IdDirectionNavigation")
                        .WithMany("TblDimDepartement")
                        .HasForeignKey("IdDirection")
                        .HasConstraintName("FK_TBL_DIM_DEPARTEMENT_TBL_DIM_DIRECTION")
                        .IsRequired();

                    b.Navigation("IdDirectionNavigation");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDimFonction", b =>
                {
                    b.HasOne("SIRHCoreData.Models.DB.TblDimDirection", "IdDirectionNavigation")
                        .WithMany("TblDimFonction")
                        .HasForeignKey("IdDirection")
                        .HasConstraintName("FK_fonction")
                        .IsRequired();

                    b.Navigation("IdDirectionNavigation");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDimVille", b =>
                {
                    b.HasOne("SIRHCoreData.Models.DB.TblDimPays", "IdPaysNavigation")
                        .WithMany("TblDimVille")
                        .HasForeignKey("IdPays")
                        .HasConstraintName("FK_TBL_DIM_VILLE_TBL_DIM_PAYS")
                        .IsRequired();

                    b.Navigation("IdPaysNavigation");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDwEtatCivil", b =>
                {
                    b.HasOne("SIRHCoreData.Models.DB.TblDimSituationFamiliale", "IdSituationFamilialeNavigation")
                        .WithMany("TblDwEtatCivil")
                        .HasForeignKey("IdSituationFamiliale")
                        .HasConstraintName("FK_TBL_DW_ETAT_CIVIL_TBL_DIM_SITUATION_FAMILIALE")
                        .IsRequired();

                    b.HasOne("SIRHCoreData.Models.DB.TblDimVille", "IdVilleNaissanceNavigation")
                        .WithMany("TblDwEtatCivil")
                        .HasForeignKey("IdVilleNaissance")
                        .HasConstraintName("FK_TBL_DW_ETAT_CIVIL_TBL_DIM_VILLE")
                        .IsRequired();

                    b.HasOne("SIRHCoreData.Models.DB.TblDwSalarie", "MatriculeNavigation")
                        .WithOne("TblDwEtatCivil")
                        .HasForeignKey("SIRHCoreData.Models.DB.TblDwEtatCivil", "Matricule")
                        .HasConstraintName("FK_TBL_DW_ETAT_CIVIL_TBL_DW_SALARIE")
                        .IsRequired();

                    b.Navigation("IdSituationFamilialeNavigation");

                    b.Navigation("IdVilleNaissanceNavigation");

                    b.Navigation("MatriculeNavigation");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDwSalarie", b =>
                {
                    b.HasOne("SIRHCoreData.Models.DB.TblDimFonction", "IdFonctionNavigation")
                        .WithMany("TblDwSalarie")
                        .HasForeignKey("IdFonction")
                        .HasConstraintName("FK_Fonction_salarie")
                        .IsRequired();

                    b.HasOne("SIRHCoreData.Models.DB.TblDimStructure", "IdStructureNavigation")
                        .WithMany("TblDwSalarie")
                        .HasForeignKey("IdStructure")
                        .HasConstraintName("FK_structure_salarie")
                        .IsRequired();

                    b.Navigation("IdFonctionNavigation");

                    b.Navigation("IdStructureNavigation");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDimDirection", b =>
                {
                    b.Navigation("TblDimDepartement");

                    b.Navigation("TblDimFonction");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDimFonction", b =>
                {
                    b.Navigation("TblDwSalarie");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDimPays", b =>
                {
                    b.Navigation("TblDimVille");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDimSituationFamiliale", b =>
                {
                    b.Navigation("TblDwEtatCivil");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDimStructure", b =>
                {
                    b.Navigation("TblDwSalarie");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDimVille", b =>
                {
                    b.Navigation("TblDwEtatCivil");
                });

            modelBuilder.Entity("SIRHCoreData.Models.DB.TblDwSalarie", b =>
                {
                    b.Navigation("TblDwEtatCivil");
                });
#pragma warning restore 612, 618
        }
    }
}
